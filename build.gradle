plugins {
    id 'io.franzbecker.gradle-lombok' version '1.8'
}
apply plugin: 'java'

group = pluginGroup
version = pluginVersion

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "MG-Dev Jenkins CI Maven Repository"
        url = "https://ci.mg-dev.eu/plugin/repository/everything/"
    }
}

configurations {
    extraLibs
}

dependencies {
    testCompile group: "junit", name: "junit", version: "4.12"
    def f = new File("spigot-1.13.2.jar")
    if(!f.exists()) new URL("https://cdn.getbukkit.org/spigot/spigot-1.13.2.jar").withInputStream{ i -> f.withOutputStream{ it << i }}
    compile files("spigot-1.13.2.jar")
    extraLibs group: "com.google.code.gson", name: "gson", version: "2.8.5"
    compileOnly "org.projectlombok:lombok:1.18.6"
    compile "com.bergerkiller.bukkit:BKCommonLib:1.13.2-v2"
}

import org.apache.tools.ant.filters.ReplaceTokens
import io.franzbecker.gradle.lombok.task.DelombokTask
import org.gradle.api.tasks.Delete

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

lombok {
    version = "1.16.10"
}

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

javadoc {
    dependsOn delombok
    exclude "ml/extbukkit/main/secure"
    source = delombok.outputDir
    classpath = configurations.compile
}
sourceSets {
    build {
        java.srcDir file('src/main/java')
    }
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}